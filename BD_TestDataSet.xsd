<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BD_TestDataSet" targetNamespace="http://tempuri.org/BD_TestDataSet.xsd" xmlns:mstns="http://tempuri.org/BD_TestDataSet.xsd" xmlns="http://tempuri.org/BD_TestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BD_TestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BD_TestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApp1.Properties.Settings.GlobalReference.Default.BD_TestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CombatTableAdapter" GeneratorDataComponentClassName="CombatTableAdapter" Name="Combat" UserDataComponentName="CombatTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BD_TestConnectionString (Settings)" DbObjectName="dbo.Combat" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Combat] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Combat] ([id]) VALUES (@id);
SELECT id FROM Combat WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id FROM dbo.Combat</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Combat] SET [id] = @id WHERE (([id] = @Original_id));
SELECT id FROM Combat WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EquipeTableAdapter" GeneratorDataComponentClassName="EquipeTableAdapter" Name="Equipe" UserDataComponentName="EquipeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BD_TestConnectionString (Settings)" DbObjectName="dbo.Equipe" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Equipe] WHERE (([id] = @Original_id) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Equipe] ([id], [nom]) VALUES (@id, @nom);
SELECT id, nom FROM Equipe WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, nom FROM dbo.Equipe</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Equipe] SET [id] = @id, [nom] = @nom WHERE (([id] = @Original_id) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)));
SELECT id, nom FROM Equipe WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupeMonstreTableAdapter" GeneratorDataComponentClassName="GroupeMonstreTableAdapter" Name="GroupeMonstre" UserDataComponentName="GroupeMonstreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BD_TestConnectionString (Settings)" DbObjectName="dbo.GroupeMonstre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupeMonstre] WHERE (([idCombat] = @Original_idCombat) AND ([idMonstre] = @Original_idMonstre) AND ([quantite] = @Original_quantite))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idCombat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCombat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idMonstre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMonstre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quantite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantite" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupeMonstre] ([idCombat], [idMonstre], [quantite]) VALUES (@idCombat, @idMonstre, @quantite);
SELECT idCombat, idMonstre, quantite FROM GroupeMonstre WHERE (idCombat = @idCombat) AND (idMonstre = @idMonstre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idCombat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCombat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idMonstre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMonstre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quantite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantite" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idCombat, idMonstre, quantite FROM dbo.GroupeMonstre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupeMonstre] SET [idCombat] = @idCombat, [idMonstre] = @idMonstre, [quantite] = @quantite WHERE (([idCombat] = @Original_idCombat) AND ([idMonstre] = @Original_idMonstre) AND ([quantite] = @Original_quantite));
SELECT idCombat, idMonstre, quantite FROM GroupeMonstre WHERE (idCombat = @idCombat) AND (idMonstre = @idMonstre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idCombat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCombat" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idMonstre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMonstre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quantite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idCombat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idCombat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idMonstre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idMonstre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quantite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantite" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCombat" DataSetColumn="idCombat" />
              <Mapping SourceColumn="idMonstre" DataSetColumn="idMonstre" />
              <Mapping SourceColumn="quantite" DataSetColumn="quantite" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="JoueurTableAdapter" GeneratorDataComponentClassName="JoueurTableAdapter" Name="Joueur" UserDataComponentName="JoueurTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BD_TestConnectionString (Settings)" DbObjectName="dbo.Joueur" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Joueur] WHERE (([id] = @Original_id) AND ([nom] = @Original_nom))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Joueur] ([id], [nom]) VALUES (@id, @nom);
SELECT id, nom FROM Joueur WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, nom FROM dbo.Joueur</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Joueur] SET [id] = @id, [nom] = @nom WHERE (([id] = @Original_id) AND ([nom] = @Original_nom));
SELECT id, nom FROM Joueur WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MonstreTableAdapter" GeneratorDataComponentClassName="MonstreTableAdapter" Name="Monstre" UserDataComponentName="MonstreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BD_TestConnectionString (Settings)" DbObjectName="dbo.Monstre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Monstre] WHERE (([id] = @Original_id) AND ([nom] = @Original_nom) AND ([experience] = @Original_experience) AND ((@IsNull_dangerosite = 1 AND [dangerosite] IS NULL) OR ([dangerosite] = @Original_dangerosite)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_dangerosite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dangerosite" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dangerosite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dangerosite" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Monstre] ([id], [nom], [experience], [dangerosite]) VALUES (@id, @nom, @experience, @dangerosite);
SELECT id, nom, experience, dangerosite FROM Monstre WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dangerosite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dangerosite" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, nom, experience, dangerosite FROM dbo.Monstre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Monstre] SET [id] = @id, [nom] = @nom, [experience] = @experience, [dangerosite] = @dangerosite WHERE (([id] = @Original_id) AND ([nom] = @Original_nom) AND ([experience] = @Original_experience) AND ((@IsNull_dangerosite = 1 AND [dangerosite] IS NULL) OR ([dangerosite] = @Original_dangerosite)));
SELECT id, nom, experience, dangerosite FROM Monstre WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@dangerosite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dangerosite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_dangerosite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dangerosite" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dangerosite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dangerosite" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="experience" DataSetColumn="experience" />
              <Mapping SourceColumn="dangerosite" DataSetColumn="dangerosite" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonnageTableAdapter" GeneratorDataComponentClassName="PersonnageTableAdapter" Name="Personnage" UserDataComponentName="PersonnageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BD_TestConnectionString (Settings)" DbObjectName="dbo.Personnage" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Personnage] WHERE (([id] = @Original_id) AND ([idEquipe] = @Original_idEquipe) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)) AND ((@IsNull_experience = 1 AND [experience] IS NULL) OR ([experience] = @Original_experience)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idEquipe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idEquipe" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Personnage] ([id], [idEquipe], [nom], [experience]) VALUES (@id, @idEquipe, @nom, @experience);
SELECT id, idEquipe, nom, experience FROM Personnage WHERE (id = @id) AND (idEquipe = @idEquipe)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idEquipe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idEquipe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, idEquipe, nom, experience FROM dbo.Personnage</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Personnage] SET [id] = @id, [idEquipe] = @idEquipe, [nom] = @nom, [experience] = @experience WHERE (([id] = @Original_id) AND ([idEquipe] = @Original_idEquipe) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)) AND ((@IsNull_experience = 1 AND [experience] IS NULL) OR ([experience] = @Original_experience)));
SELECT id, idEquipe, nom, experience FROM Personnage WHERE (id = @id) AND (idEquipe = @idEquipe)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idEquipe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idEquipe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idEquipe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idEquipe" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_experience" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="experience" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="idEquipe" DataSetColumn="idEquipe" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="experience" DataSetColumn="experience" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BD_TestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="BD_TestDataSet" msprop:Generator_DataSetName="BD_TestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Combat" msprop:Generator_RowEvHandlerName="CombatRowChangeEventHandler" msprop:Generator_RowDeletedName="CombatRowDeleted" msprop:Generator_RowDeletingName="CombatRowDeleting" msprop:Generator_RowEvArgName="CombatRowChangeEvent" msprop:Generator_TablePropName="Combat" msprop:Generator_RowChangedName="CombatRowChanged" msprop:Generator_RowChangingName="CombatRowChanging" msprop:Generator_TableClassName="CombatDataTable" msprop:Generator_RowClassName="CombatRow" msprop:Generator_TableVarName="tableCombat" msprop:Generator_UserTableName="Combat">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Equipe" msprop:Generator_RowEvHandlerName="EquipeRowChangeEventHandler" msprop:Generator_RowDeletedName="EquipeRowDeleted" msprop:Generator_RowDeletingName="EquipeRowDeleting" msprop:Generator_RowEvArgName="EquipeRowChangeEvent" msprop:Generator_TablePropName="Equipe" msprop:Generator_RowChangedName="EquipeRowChanged" msprop:Generator_RowChangingName="EquipeRowChanging" msprop:Generator_TableClassName="EquipeDataTable" msprop:Generator_RowClassName="EquipeRow" msprop:Generator_TableVarName="tableEquipe" msprop:Generator_UserTableName="Equipe">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnPropNameInTable="nomColumn" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_UserColumnName="nom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GroupeMonstre" msprop:Generator_RowEvHandlerName="GroupeMonstreRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupeMonstreRowDeleted" msprop:Generator_RowDeletingName="GroupeMonstreRowDeleting" msprop:Generator_RowEvArgName="GroupeMonstreRowChangeEvent" msprop:Generator_TablePropName="GroupeMonstre" msprop:Generator_RowChangedName="GroupeMonstreRowChanged" msprop:Generator_RowChangingName="GroupeMonstreRowChanging" msprop:Generator_TableClassName="GroupeMonstreDataTable" msprop:Generator_RowClassName="GroupeMonstreRow" msprop:Generator_TableVarName="tableGroupeMonstre" msprop:Generator_UserTableName="GroupeMonstre">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCombat" msprop:Generator_ColumnPropNameInRow="idCombat" msprop:Generator_ColumnPropNameInTable="idCombatColumn" msprop:Generator_ColumnVarNameInTable="columnidCombat" msprop:Generator_UserColumnName="idCombat" type="xs:int" />
              <xs:element name="idMonstre" msprop:Generator_ColumnPropNameInRow="idMonstre" msprop:Generator_ColumnPropNameInTable="idMonstreColumn" msprop:Generator_ColumnVarNameInTable="columnidMonstre" msprop:Generator_UserColumnName="idMonstre" type="xs:int" />
              <xs:element name="quantite" msprop:Generator_ColumnPropNameInRow="quantite" msprop:Generator_ColumnPropNameInTable="quantiteColumn" msprop:Generator_ColumnVarNameInTable="columnquantite" msprop:Generator_UserColumnName="quantite" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Joueur" msprop:Generator_RowEvHandlerName="JoueurRowChangeEventHandler" msprop:Generator_RowDeletedName="JoueurRowDeleted" msprop:Generator_RowDeletingName="JoueurRowDeleting" msprop:Generator_RowEvArgName="JoueurRowChangeEvent" msprop:Generator_TablePropName="Joueur" msprop:Generator_RowChangedName="JoueurRowChanged" msprop:Generator_RowChangingName="JoueurRowChanging" msprop:Generator_TableClassName="JoueurDataTable" msprop:Generator_RowClassName="JoueurRow" msprop:Generator_TableVarName="tableJoueur" msprop:Generator_UserTableName="Joueur">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnPropNameInTable="nomColumn" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_UserColumnName="nom">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Monstre" msprop:Generator_RowEvHandlerName="MonstreRowChangeEventHandler" msprop:Generator_RowDeletedName="MonstreRowDeleted" msprop:Generator_RowDeletingName="MonstreRowDeleting" msprop:Generator_RowEvArgName="MonstreRowChangeEvent" msprop:Generator_TablePropName="Monstre" msprop:Generator_RowChangedName="MonstreRowChanged" msprop:Generator_RowChangingName="MonstreRowChanging" msprop:Generator_TableClassName="MonstreDataTable" msprop:Generator_RowClassName="MonstreRow" msprop:Generator_TableVarName="tableMonstre" msprop:Generator_UserTableName="Monstre">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnPropNameInTable="nomColumn" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_UserColumnName="nom">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="experience" msprop:Generator_ColumnPropNameInRow="experience" msprop:Generator_ColumnPropNameInTable="experienceColumn" msprop:Generator_ColumnVarNameInTable="columnexperience" msprop:Generator_UserColumnName="experience" type="xs:int" />
              <xs:element name="dangerosite" msprop:Generator_ColumnPropNameInRow="dangerosite" msprop:Generator_ColumnPropNameInTable="dangerositeColumn" msprop:Generator_ColumnVarNameInTable="columndangerosite" msprop:Generator_UserColumnName="dangerosite" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Personnage" msprop:Generator_RowEvHandlerName="PersonnageRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonnageRowDeleted" msprop:Generator_RowDeletingName="PersonnageRowDeleting" msprop:Generator_RowEvArgName="PersonnageRowChangeEvent" msprop:Generator_TablePropName="Personnage" msprop:Generator_RowChangedName="PersonnageRowChanged" msprop:Generator_RowChangingName="PersonnageRowChanging" msprop:Generator_TableClassName="PersonnageDataTable" msprop:Generator_RowClassName="PersonnageRow" msprop:Generator_TableVarName="tablePersonnage" msprop:Generator_UserTableName="Personnage">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="idEquipe" msprop:Generator_ColumnPropNameInRow="idEquipe" msprop:Generator_ColumnPropNameInTable="idEquipeColumn" msprop:Generator_ColumnVarNameInTable="columnidEquipe" msprop:Generator_UserColumnName="idEquipe" type="xs:int" />
              <xs:element name="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnPropNameInTable="nomColumn" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_UserColumnName="nom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="experience" msprop:Generator_ColumnPropNameInRow="experience" msprop:Generator_ColumnPropNameInTable="experienceColumn" msprop:Generator_ColumnVarNameInTable="columnexperience" msprop:Generator_UserColumnName="experience" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Combat" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Equipe_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Equipe" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="GroupeMonstre_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupeMonstre" />
      <xs:field xpath="mstns:idCombat" />
      <xs:field xpath="mstns:idMonstre" />
    </xs:unique>
    <xs:unique name="Joueur_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Joueur" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Monstre_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Monstre" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Personnage_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Personnage" />
      <xs:field xpath="mstns:id" />
      <xs:field xpath="mstns:idEquipe" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__GroupeMon__idCom__5FB337D6" msdata:parent="Combat" msdata:child="GroupeMonstre" msdata:parentkey="id" msdata:childkey="idCombat" msprop:Generator_UserParentTable="Combat" msprop:Generator_UserChildTable="GroupeMonstre" msprop:Generator_RelationVarName="relationFK__GroupeMon__idCom__5FB337D6" msprop:Generator_ChildPropName="GetGroupeMonstreRows" msprop:Generator_ParentPropName="CombatRow" msprop:Generator_UserRelationName="FK__GroupeMon__idCom__5FB337D6" />
      <msdata:Relationship name="FK__GroupeMon__idMon__60A75C0F" msdata:parent="Monstre" msdata:child="GroupeMonstre" msdata:parentkey="id" msdata:childkey="idMonstre" msprop:Generator_UserParentTable="Monstre" msprop:Generator_UserChildTable="GroupeMonstre" msprop:Generator_RelationVarName="relationFK__GroupeMon__idMon__60A75C0F" msprop:Generator_UserRelationName="FK__GroupeMon__idMon__60A75C0F" msprop:Generator_ChildPropName="GetGroupeMonstreRows" msprop:Generator_ParentPropName="MonstreRow" />
      <msdata:Relationship name="FK__Personnag__exper__59063A47" msdata:parent="Equipe" msdata:child="Personnage" msdata:parentkey="id" msdata:childkey="idEquipe" msprop:Generator_UserParentTable="Equipe" msprop:Generator_UserChildTable="Personnage" msprop:Generator_RelationVarName="relationFK__Personnag__exper__59063A47" msprop:Generator_ChildPropName="GetPersonnageRows" msprop:Generator_ParentPropName="EquipeRow" msprop:Generator_UserRelationName="FK__Personnag__exper__59063A47" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>